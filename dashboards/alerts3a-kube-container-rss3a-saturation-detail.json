{
  "__inputs": [

  ],
  "__requires": [

  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": false,
        "iconColor": "#96D98D",
        "name": "deploy",
        "showIn": 0,
        "tags": [
          "deploy",
          "$environment"
        ],
        "type": "tags"
      },
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": false,
        "hide": false,
        "iconColor": "#FFEE52",
        "name": "canary-deploy",
        "showIn": 0,
        "tags": [
          "deploy",
          "${environment}-cny"
        ],
        "type": "tags"
      },
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": false,
        "hide": false,
        "iconColor": "#CA95E5",
        "name": "feature-flags",
        "showIn": 0,
        "tags": [
          "feature-flag",
          "${environment}"
        ],
        "type": "tags"
      }
    ]
  },
  "description": "Uploaded by https://gitlab.com/gitlab-com/runbooks/-/jobs/6131459528 at Thu Feb  8 20:49:33 UTC 2024",
  "editable": false,
  "gnetId": null,
  "graphTooltip": 1,
  "hideControls": false,
  "id": null,
  "links": [
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": "",
      "targetBlank": false,
      "title": "$type service",
      "type": "link",
      "url": "https://dashboards.gitlab.net/d/general-service/service-platform-metrics?orgId=1&var-type=$type"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "managed",
        "service overview"
      ],
      "targetBlank": false,
      "title": "Service Overview Dashboards",
      "type": "dashboards",
      "url": ""
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": "",
      "targetBlank": false,
      "title": "Platform Triage",
      "type": "link",
      "url": "https://dashboards.gitlab.net/d/general-triage/platform-triage?orgId=1"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": false,
      "keepTime": false,
      "tags": "type:$type managed",
      "targetBlank": false,
      "title": "Service Dashboards",
      "type": "dashboards",
      "url": ""
    },
    {
      "asDropdown": true,
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": true,
      "tags": "saturationdetail",
      "targetBlank": false,
      "title": "Saturation Detail",
      "type": "dashboards",
      "url": ""
    }
  ],
  "panels": [
    {
      "aliasColors": {
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$PROMETHEUS_DS",
      "decimals": 2,
      "description": "Records the total anonymous (unevictable) memory utilization for containers for this\nservice, as a percentage of the memory limit as configured through Kubernetes.\n\nThis is computed using the container's resident set size (RSS), as opposed to\nkube_container_memory which uses the working set size. For our purposes, RSS is the\nbetter metric as cAdvisor's working set calculation includes pages from the\nfilesystem cache that can (and will) be evicted before the OOM killer kills the\ncgroup.\n\nA container's RSS (anonymous memory usage) is still not precisely what the OOM\nkiller will use, but it's a better approximation of what the container's workload is\nactually using. RSS metrics can, however, be dramatically inflated if a process in\nthe container uses MADV_FREE (lazy-free) memory. RSS will include the memory that is\navailable to be reclaimed without a page fault, but not currently in use.\n\nThe most common case of OOM kills is for anonymous memory demand to overwhelm the\ncontainer's memory limit. On swapless hosts, anonymous memory cannot be evicted from\nthe page cache, so when a container's memory usage is mostly anonymous pages, the\nonly remaining option to relieve memory pressure may be the OOM killer.\n\nAs container RSS approaches container memory limit, OOM kills become much more\nlikely. Consequently, this ratio is a good leading indicator of memory saturation\nand OOM risk.\n Lower is better.",
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 20,
        "w": 18,
        "x": 0,
        "y": 0
      },
      "id": 2875690100,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideEmpty": true,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "sideWidth": null,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [

      ],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "repeat": null,
      "seriesOverrides": [
        {
          "alias": "/^Soft SLO/",
          "color": "#FF4500",
          "dashLength": 4,
          "dashes": true,
          "legend": true,
          "lines": true,
          "linewidth": 2,
          "nullPointMode": "connected",
          "spaceLength": 10,
          "zindex": -2
        },
        {
          "alias": "/^Hard SLO/",
          "color": "#F2495C",
          "dashLength": 4,
          "dashes": true,
          "legend": true,
          "lines": true,
          "linewidth": 4,
          "nullPointMode": "connected",
          "spaceLength": 4,
          "zindex": -2
        },
        {
          "alias": "/aggregated /",
          "color": "#E7D551",
          "linewidth": 2,
          "zindex": 3
        },
        {
          "alias": "/^95th quantile for week/",
          "color": "#37872D",
          "dashLength": 4,
          "dashes": true,
          "legend": true,
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "connected",
          "spaceLength": 10,
          "zindex": -2
        },
        {
          "alias": "/^99th quantile for week/",
          "color": "#56A64B",
          "dashLength": 4,
          "dashes": true,
          "legend": true,
          "lines": true,
          "linewidth": 2,
          "nullPointMode": "connected",
          "spaceLength": 4,
          "zindex": -2
        }
      ],
      "spaceLength": 10,
      "stableId": "saturation-kube_container_rss",
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "clamp_min(\n  clamp_max(\n    max by(environment, tier, type, stage, shard) (\n  clamp_min(\n    clamp_max(\n      container_memory_rss:labeled{container!=\"\", container!=\"POD\", env=\"$environment\",stage=\"$stage\",type=\"$type\"}\n      /\n      (container_spec_memory_limit_bytes:labeled{container!=\"\", container!=\"POD\", env=\"$environment\",stage=\"$stage\",type=\"$type\"} > 0)\n      ,\n      1)\n  ,\n  0)\n)\n\n  ,1)\n,0)\n",
          "format": "time_series",
          "interval": "1m",
          "intervalFactor": 1,
          "legendFormat": "{{ type }}",
          "refId": "A"
        },
        {
          "expr": "clamp_min(\n  clamp_max(\n    max(\n      max_over_time(gitlab_component_saturation:ratio{env=\"$environment\",stage=\"$stage\",type=\"$type\", component=\"kube_container_rss\"}[$__interval])\n    ) by (component)\n  ,1)\n,0)\n",
          "format": "time_series",
          "interval": "1m",
          "intervalFactor": 1,
          "legendFormat": "aggregated {{ component }}",
          "refId": "B"
        },
        {
          "expr": "max(\n  gitlab_component_saturation:ratio_quantile95_1w{env=\"$environment\",stage=\"$stage\",type=\"$type\", component=\"kube_container_rss\"}\n)\n",
          "format": "time_series",
          "interval": "1m",
          "intervalFactor": 1,
          "legendFormat": "95th quantile for week {{ component }}",
          "refId": "C"
        },
        {
          "expr": "max(\n  gitlab_component_saturation:ratio_quantile99_1w{env=\"$environment\",stage=\"$stage\",type=\"$type\", component=\"kube_container_rss\"}\n)\n",
          "format": "time_series",
          "interval": "1m",
          "intervalFactor": 1,
          "legendFormat": "99th quantile for week {{ component }}",
          "refId": "D"
        },
        {
          "expr": "avg(slo:max:soft:gitlab_component_saturation:ratio{component=\"kube_container_rss\"}) by (component)\n",
          "format": "time_series",
          "interval": "1m",
          "intervalFactor": 1,
          "legendFormat": "Soft SLO: {{ component }}",
          "refId": "E"
        },
        {
          "expr": "avg(slo:max:hard:gitlab_component_saturation:ratio{component=\"kube_container_rss\"}) by (component)\n",
          "format": "time_series",
          "interval": "1m",
          "intervalFactor": 1,
          "legendFormat": "Hard SLO: {{ component }}",
          "refId": "F"
        }
      ],
      "thresholds": [

      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "kube_container_rss component saturation: Kube Container Memory Utilization (RSS)",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": [

        ]
      },
      "yaxes": [
        {
          "format": "percentunit",
          "label": "Saturation %",
          "logBase": 1,
          "max": 1,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": 1,
          "min": 0,
          "show": false
        }
      ]
    },
    {
      "content": "## Kube Container Memory Utilization (RSS)\n\nRecords the total anonymous (unevictable) memory utilization for containers for this\nservice, as a percentage of the memory limit as configured through Kubernetes.\n\nThis is computed using the container's resident set size (RSS), as opposed to\nkube_container_memory which uses the working set size. For our purposes, RSS is the\nbetter metric as cAdvisor's working set calculation includes pages from the\nfilesystem cache that can (and will) be evicted before the OOM killer kills the\ncgroup.\n\nA container's RSS (anonymous memory usage) is still not precisely what the OOM\nkiller will use, but it's a better approximation of what the container's workload is\nactually using. RSS metrics can, however, be dramatically inflated if a process in\nthe container uses MADV_FREE (lazy-free) memory. RSS will include the memory that is\navailable to be reclaimed without a page fault, but not currently in use.\n\nThe most common case of OOM kills is for anonymous memory demand to overwhelm the\ncontainer's memory limit. On swapless hosts, anonymous memory cannot be evicted from\nthe page cache, so when a container's memory usage is mostly anonymous pages, the\nonly remaining option to relieve memory pressure may be the OOM killer.\n\nAs container RSS approaches container memory limit, OOM kills become much more\nlikely. Consequently, this ratio is a good leading indicator of memory saturation\nand OOM risk.\n\n\n## What to do from here?\n\n* Check the ${type} service overview dashboard (accessible from the menu above)\n* [Find related issues on GitLab.com](https://gitlab.com/groups/gitlab-com/gl-infra/-/issues?scope=all&state=all&label_name[]=GitLab.com+Resource+Saturation&search=kube_container_rss)\n* [Create an issue in the Infrastructure Tracker](https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/new?issue[title]=Resource+Saturation:+kube_container_rss&issue[description]=/label+~\"GitLab.com+Resource+Saturation\")\n\nKeep in mind that this is a **causal alert**. This means that this may not neccessarily\nbe leading to user impact. Check the alert list below for active symptom based\nalerts incidating potential user impact.\n",
      "datasource": null,
      "gridPos": {
        "h": 14,
        "w": 6,
        "x": 18,
        "y": 0
      },
      "id": 3,
      "mode": "markdown",
      "title": "Help",
      "type": "text"
    },
    {
      "columns": [

      ],
      "datasource": "$PROMETHEUS_DS",
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 18,
        "y": 14
      },
      "id": 4,
      "links": [

      ],
      "styles": [
        {
          "alias": "Time",
          "pattern": "Time",
          "type": "hidden"
        },
        {
          "alias": "Alert",
          "decimals": 2,
          "link": true,
          "linkTooltip": "Open alertmanager",
          "linkUrl": "https://alerts.gitlab.net/#/alerts?filter=%7Balertname%3D%22${__cell}%22%2C%20env%3D%22${environment}%22%7D",
          "mappingType": 2,
          "pattern": "alertname",
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Score",
          "colorMode": "row",
          "colors": [
            "#CCCC00",
            "#CC6600",
            "#CC3300"
          ],
          "decimals": 0,
          "mappingType": 1,
          "pattern": "Value",
          "thresholds": [
            "2",
            "3"
          ],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "expr": "sort(\n  max(\n    ALERTS{alert_type=\"symptom\", type=\"${type}\", environment=\"$environment\", severity=\"s1\", alertstate=\"firing\"} * 4\n    or\n    ALERTS{alert_type=\"symptom\", type=\"${type}\", environment=\"$environment\", severity=\"s2\", alertstate=\"firing\"} * 3\n    or\n    ALERTS{alert_type=\"symptom\", type=\"${type}\", environment=\"$environment\", severity=\"s3\", alertstate=\"firing\"} * 2\n    or\n    ALERTS{alert_type=\"symptom\", type=\"${type}\", environment=\"$environment\", alertstate=\"firing\"}\n  ) by (environment, alertname, severity)\n)\n",
          "format": "table",
          "instant": true,
          "interval": "1m",
          "intervalFactor": 1,
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Potentially User Impacting Alerts",
      "type": "table"
    },
    {
      "content": "Made with ❤️ and [Grafonnet](https://github.com/grafana/grafonnet-lib). [Contribute to this dashboard on GitLab.com](https://gitlab.com/gitlab-com/runbooks/blob/master/dashboards)\n",
      "datasource": null,
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 110000
      },
      "id": 5,
      "mode": "markdown",
      "title": "Source",
      "type": "text"
    }
  ],
  "refresh": "",
  "rows": [

  ],
  "schemaVersion": 16,
  "style": "light",
  "tags": [
    "managed",
    "alerts",
    "alert-target",
    "saturationdetail"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "text": "Global",
          "value": "Global"
        },
        "hide": 0,
        "label": null,
        "name": "PROMETHEUS_DS",
        "options": [

        ],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "text": "gprd",
          "value": "gprd"
        },
        "datasource": "$PROMETHEUS_DS",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "environment",
        "options": [

        ],
        "query": "label_values(gitlab_service_ops:rate, environment)",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [

        ],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "ai-assisted",
          "value": "ai-assisted"
        },
        "datasource": "$PROMETHEUS_DS",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "type",
        "options": [

        ],
        "query": "label_values(gitlab_service_ops:rate{environment=\"$environment\"}, type)",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [

        ],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "main",
          "value": "main"
        },
        "hide": 0,
        "includeAll": false,
        "label": "",
        "multi": false,
        "name": "stage",
        "options": [
          {
            "text": "main",
            "value": "main"
          },
          {
            "text": "cny",
            "value": "cny"
          },
          {
            "text": "",
            "value": ""
          }
        ],
        "query": "main,cny,",
        "refresh": 0,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-6h/m",
    "to": "now/m"
  },
  "timepicker": {
    "refresh_intervals": [
      "1m",
      "5m",
      "10m",
      "15m",
      "30m"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "utc",
  "title": "alerts: kube container rss: Saturation Detail",
  "uid": "alerts-sat_kube_container_rss",
  "version": 1155
}